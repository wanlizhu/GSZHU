cmake_minimum_required(VERSION 3.11)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
include(CMakeParseArguments)
include(GNUInstallDirs)
include("${CMAKE_BINARY_DIR}/conanbuildinfo.cmake")

project(GraphicsEngine)
set_property(GLOBAL PROPERTY USE_FOLDERS ON)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_BINDIR})
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
conan_basic_setup(TARGETS)

set(GE_OUTPUT_WITH_CONFIG_SUBDIR OFF CACHE BOOL "")
set(BUILD_SHARED_LIBS ON  CACHE BOOL "")
set(GE_BUILD_EDITOR   ON  CACHE BOOL "")
set(GE_BUILD_TEST     ON  CACHE BOOL "")
set(GE_ENABLE_VULKAN  ON  CACHE BOOL "")
set(GE_ENABLE_DX12    ON  CACHE BOOL "")
set(GE_VERSION_MAJOR 1)
set(GE_VERSION_MINOR 0)
set(GE_VERSION_PATCH 0)
set(GE_VERSION "${GE_VERSION_MAJOR}.${GE_VERSION_MINOR}.${GE_VERSION_PATCH}")
set(RSD "${CMAKE_CURRENT_SOURCE_DIR}")
set(RBD "${CMAKE_CURRENT_BINARY_DIR}")

add_subdirectory(runtime)

add_library(Wanlix SHARED dummy.cpp)
if (NOT GE_OUTPUT_WITH_CONFIG_SUBDIR)
    get_target_property(_outdir_ Wanlix RUNTIME_OUTPUT_DIRECTORY)
    get_target_property(_libdir_ Wanlix LIBRARY_OUTPUT_DIRECTORY)
    set_target_properties(Wanlix PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG          "${_outdir_}")
    set_target_properties(Wanlix PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE        "${_outdir_}")
    set_target_properties(Wanlix PROPERTIES RUNTIME_OUTPUT_DIRECTORY_MINISIZEREL    "${_outdir_}")
    set_target_properties(Wanlix PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO "${_outdir_}")
    set_target_properties(Wanlix PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG          "${_libdir_}")
    set_target_properties(Wanlix PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELEASE        "${_libdir_}")
    set_target_properties(Wanlix PROPERTIES LIBRARY_OUTPUT_DIRECTORY_MINISIZEREL    "${_libdir_}")
    set_target_properties(Wanlix PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO "${_libdir_}")
endif()

set(CSD "${CMAKE_CURRENT_SOURCE_DIR}")
set(COD "${CMAKE_CURRENT_BINARY_DIR}")
file(GLOB_RECURSE _interfaces_ "${CSD}/include/*.h" "${CSD}/include/*.hpp")
file(GLOB_RECURSE _headers_    "${CSD}/source/*.h"  "${CSD}/source/*.hpp")
file(GLOB_RECURSE _sources_    "${CSD}/source/*.c"  "${CSD}/source/*.cpp")
source_group(TREE "${CSD}/include" PREFIX "Interface Files" FILES ${_interfaces_})
source_group(TREE "${CSD}/source"  PREFIX "Header Files" FILES ${_headers_})
source_group(TREE "${CSD}/source"  PREFIX "Source Files" FILES ${_sources_})
target_sources(Wanlix PRIVATE ${_interfaces_} ${_headers_} ${_sources_})
set_target_properties(Wanlix PROPERTIES VERSION ${GE_VERSION})

target_include_directories(Wanlix PUBLIC "${CSD}/include" PRIVATE "${CSD}/source")
target_link_libraries(Wanlix PRIVATE Core3D)
target_compile_definitions(Wanlix PRIVATE "_UNICODE" "UNICODE")

if (GE_BUILD_EDITOR)
    add_subdirectory(editor)
endif()

get_target_property(_outdir_ Wanlix RUNTIME_OUTPUT_DIRECTORY)
message(STATUS "Target: Wanlix -> ${_outdir_}" )
add_custom_command(
    TARGET Wanlix 
    POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory "${CSD}/data" "${_outdir_}/data"
    WORKING_DIRECTORY "${CSD}"
)
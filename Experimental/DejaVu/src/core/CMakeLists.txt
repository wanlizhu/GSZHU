cmake_minimum_required(VERSION 3.15.0)
project(dejavu-core)
include(GNUInstallDirs)
include(CheckCXXCompilerFlag)
include(CheckCXXSourceRuns)
include(CMakeParseArguments)

if (DJV_ROOT_DIR)
    set(DJV_CORE_INCLUDE_DIR "${DJV_ROOT_DIR}/include")
else()
    set(DJV_CORE_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include")
endif()

set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(DJV_BUILD_SHARED_LIBS ON)
set(DJV_USE_EIGEN ON CACHE BOOL "Use Eigen library as the linear algebra backend")

add_library(dejavu-core SHARED "dllmain.cpp")

find_package(Eigen3 CONFIG REQUIRED)
find_package(assimp CONFIG REQUIRED)
find_package(Stb REQUIRED)

target_include_directories(dejavu-core PUBLIC  "${DJV_CORE_INCLUDE_DIR}")
target_include_directories(dejavu-core PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}")
target_include_directories(dejavu-core PRIVATE "${Stb_INCLUDE_DIR}")
target_compile_definitions(dejavu-core PRIVATE "UNICODE")
target_link_libraries(dejavu-core PUBLIC  Eigen3::Eigen)
target_link_libraries(dejavu-core PRIVATE assimp::assimp)

configure_file("${DJV_CORE_INCLUDE_DIR}/dejavu/core/config_core.h.in" "${DJV_CORE_INCLUDE_DIR}/dejavu/core/config_core.h")

target_sources(dejavu-core PRIVATE "${DJV_CORE_INCLUDE_DIR}/dejavu/core/config_core.h")
target_sources(dejavu-core PRIVATE "${DJV_CORE_INCLUDE_DIR}/dejavu/core/preprocess.h")
target_sources(dejavu-core PRIVATE "${DJV_CORE_INCLUDE_DIR}/dejavu/core/algebra.h")
target_sources(dejavu-core PRIVATE "${DJV_CORE_INCLUDE_DIR}/dejavu/core/filesystem.h")
target_sources(dejavu-core PRIVATE "${DJV_CORE_INCLUDE_DIR}/dejavu/core/logger.h")
target_sources(dejavu-core PRIVATE "${DJV_CORE_INCLUDE_DIR}/dejavu/core/bitmap.h")
target_sources(dejavu-core PRIVATE "${DJV_CORE_INCLUDE_DIR}/dejavu/core/strings.h")
target_sources(dejavu-core PRIVATE "${DJV_CORE_INCLUDE_DIR}/dejavu/core/exceptions.h")

target_sources(dejavu-core PRIVATE "filesystem_$<IF:$<STREQUAL:${CMAKE_SYSTEM_NAME},Windows>,windows,unix>.cpp")
target_sources(dejavu-core PRIVATE "logger.cpp")
target_sources(dejavu-core PRIVATE "strings.cpp")
target_sources(dejavu-core PRIVATE "bitmap.cpp")
target_sources(dejavu-core PRIVATE "stb_image.cpp")

if (COMMAND djv_source_group)
    djv_source_group(TARGET dejavu-core ROOTS "${CMAKE_CURRENT_SOURCE_DIR}" "${DJV_CORE_INCLUDE_DIR}")    
endif()
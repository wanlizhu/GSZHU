add_library(GIH_Vulkan STATIC "${RSD}/dummy.cpp")
if (NOT GE_OUTPUT_WITH_CONFIG_SUBDIR)
    get_target_property(_outdir_ GIH_Vulkan RUNTIME_OUTPUT_DIRECTORY)
    get_target_property(_libdir_ GIH_Vulkan LIBRARY_OUTPUT_DIRECTORY)
    set_target_properties(GIH_Vulkan PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG          "${_outdir_}")
    set_target_properties(GIH_Vulkan PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE        "${_outdir_}")
    set_target_properties(GIH_Vulkan PROPERTIES RUNTIME_OUTPUT_DIRECTORY_MINISIZEREL    "${_outdir_}")
    set_target_properties(GIH_Vulkan PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO "${_outdir_}")
    set_target_properties(GIH_Vulkan PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG          "${_libdir_}")
    set_target_properties(GIH_Vulkan PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELEASE        "${_libdir_}")
    set_target_properties(GIH_Vulkan PROPERTIES LIBRARY_OUTPUT_DIRECTORY_MINISIZEREL    "${_libdir_}")
    set_target_properties(GIH_Vulkan PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO "${_libdir_}")
endif()

set(CSD "${CMAKE_CURRENT_SOURCE_DIR}")
file(GLOB_RECURSE _headers_    "${CSD}/include/*.h" "${CSD}/include/*.hpp")
file(GLOB_RECURSE _sources_    "${CSD}/source/*.c"  "${CSD}/source/*.cpp")
source_group(TREE "${CSD}/include"  PREFIX "Header Files" FILES ${_headers_})
source_group(TREE "${CSD}/source"   PREFIX "Source Files" FILES ${_sources_})
target_sources(GIH_Vulkan PRIVATE ${_headers_} ${_sources_})

target_include_directories(GIH_Vulkan PUBLIC "${CSD}/include")
target_include_directories(GIH_Vulkan PRIVATE "${CSD}/source")
target_include_directories(GIH_Vulkan PRIVATE "${CSD}")

find_package(Vulkan REQUIRED)
target_link_libraries(GIH_Vulkan PRIVATE Vulkan::Vulkan)

get_target_property(_outdir_ GIH_Vulkan LIBRARY_OUTPUT_DIRECTORY)
message(STATUS "Target: GIH_Vulkan -> ${_outdir_}" )
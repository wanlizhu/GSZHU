<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <ProjectGuid>{8EA4F2AE-DF06-4FF9-B7CA-00627FCE5191}</ProjectGuid>
    <RootNamespace>AcadDMVulkanSYNC</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="AcadDM-Vulkan-UserMacros.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="AcadDM-Vulkan-UserMacros.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(ProjectDir).INT\$(ProjectName)-$(Platform)-$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir).INT\$(ProjectName)-$(Platform)-$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(ProjectDir).INT\$(ProjectName)-$(Platform)-$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir).INT\$(ProjectName)-$(Platform)-$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PreBuildEvent>
      <Command>echo ====================
echo AcadDM-Vulkan SYNC
echo Syncing SPIRV-Cross:  [$(Platform), $(Configuration)]
echo SPIRV-Cross Version: $(SPIRV_CROSS_VERSION) 
====================

set SourceDir="$(IntDir)SPIRV-Cross"
set BinaryDir="$(IntDir)SPIRV-Cross-BUILD"
set InstallDir="$(SPIRV_CROSS_DIR)"

if not exist "%SourceDir%" (git clone --recursive --branch $(SPIRV_CROSS_VERSION) https://github.com/KhronosGroup/SPIRV-Cross.git "%SourceDir%")
cmake -S "%SourceDir%" -B "%BinaryDir%" -G "Visual Studio 16 2019" -A $(Platform) -DCMAKE_CONFIGURATION_TYPES=$(Configuration) -DCMAKE_INSTALL_PREFIX="%InstallDir%"  -DSPIRV_CROSS_STATIC=ON -DSPIRV_CROSS_CLI=OFF -DSPIRV_CROSS_ENABLE_CPP=OFF -DSPIRV_CROSS_ENABLE_C_API=OFF -DSPIRV_CROSS_ENABLE_GLSL=OFF -DSPIRV_CROSS_ENABLE_HLSL=OFF -DSPIRV_CROSS_ENABLE_MSL=OFF -DSPIRV_CROSS_ENABLE_REFLECT=OFF -DSPIRV_CROSS_ENABLE_TESTS=OFF -DSPIRV_CROSS_ENABLE_UTIL=OFF 
cmake --build "%BinaryDir%"
cmake --install "%BinaryDir%"


echo ====================
echo AcadDM-Vulkan SYNC
echo Syncing glslang:  [$(Platform), $(Configuration)]
echo glslang Version: $(GLSLANG_VERSION) 
====================

set SourceDir="$(IntDir)glslang"
set BinaryDir="$(IntDir)glslang-BUILD"
set InstallDir="$(GLSLANG_DIR)"

if not exist "%SourceDir%" (git clone --recursive --branch $(GLSLANG_VERSION)  https://github.com/KhronosGroup/glslang.git "%SourceDir%")
cmake -S "%SourceDir%" -B "%BinaryDir%" -G "Visual Studio 16 2019" -A $(Platform) -DCMAKE_CONFIGURATION_TYPES=$(Configuration) -DCMAKE_INSTALL_PREFIX="%InstallDir%" -DBUILD_SHARED_LIBS=OFF  -DBUILD_EXTERNAL=OFF -DBUILD_TESTING=OFF -DENABLE_CTEST=OFF -DENABLE_GLSLANG_BINARIES=OFF -DENABLE_SPVREMAPPER=OFF -DENABLE_HLSL=OFF
cmake --build "%BinaryDir%"
cmake --install "%BinaryDir%"</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <PreBuildEvent>
      <Command>echo ====================
echo AcadDM-Vulkan SYNC
echo Syncing SPIRV-Cross:  [$(Platform), $(Configuration)]
echo SPIRV-Cross Version: $(SPIRV_CROSS_VERSION) 
====================

set SourceDir="$(IntDir)SPIRV-Cross"
set BinaryDir="$(IntDir)SPIRV-Cross-BUILD"
set InstallDir="$(SPIRV_CROSS_DIR)"

if not exist "%SourceDir%" (git clone --recursive --branch $(SPIRV_CROSS_VERSION) https://github.com/KhronosGroup/SPIRV-Cross.git "%SourceDir%")
cmake -S "%SourceDir%" -B "%BinaryDir%" -G "Visual Studio 16 2019" -A $(Platform) -DCMAKE_CONFIGURATION_TYPES=$(Configuration) -DCMAKE_INSTALL_PREFIX="%InstallDir%"  -DSPIRV_CROSS_STATIC=ON -DSPIRV_CROSS_CLI=OFF -DSPIRV_CROSS_ENABLE_CPP=OFF -DSPIRV_CROSS_ENABLE_C_API=OFF -DSPIRV_CROSS_ENABLE_GLSL=OFF -DSPIRV_CROSS_ENABLE_HLSL=OFF -DSPIRV_CROSS_ENABLE_MSL=OFF -DSPIRV_CROSS_ENABLE_REFLECT=OFF -DSPIRV_CROSS_ENABLE_TESTS=OFF -DSPIRV_CROSS_ENABLE_UTIL=OFF 
cmake --build "%BinaryDir%"
cmake --install "%BinaryDir%"


echo ====================
echo AcadDM-Vulkan SYNC
echo Syncing glslang:  [$(Platform), $(Configuration)]
echo glslang Version: $(GLSLANG_VERSION) 
====================

set SourceDir="$(IntDir)glslang"
set BinaryDir="$(IntDir)glslang-BUILD"
set InstallDir="$(GLSLANG_DIR)"

if not exist "%SourceDir%" (git clone --recursive --branch $(GLSLANG_VERSION)  https://github.com/KhronosGroup/glslang.git "%SourceDir%")
cmake -S "%SourceDir%" -B "%BinaryDir%" -G "Visual Studio 16 2019" -A $(Platform) -DCMAKE_CONFIGURATION_TYPES=$(Configuration) -DCMAKE_INSTALL_PREFIX="%InstallDir%" -DBUILD_SHARED_LIBS=OFF  -DBUILD_EXTERNAL=OFF -DBUILD_TESTING=OFF -DENABLE_CTEST=OFF -DENABLE_GLSLANG_BINARIES=OFF -DENABLE_SPVREMAPPER=OFF -DENABLE_HLSL=OFF
cmake --build "%BinaryDir%"
cmake --install "%BinaryDir%"</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>